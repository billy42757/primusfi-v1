import { MarketDataType } from "@/types/type";

// 20 sample markets with varied fields for testing
export const SAMPLE_MARKETS: MarketDataType[] = [
  ...Array.from({ length: 10 }).map((_, i) => ({
    _id: `sample_crypto_${i}`,
    marketField: 0,
    apiType: 0,
    task: "price",
    creator: `creator_${i}`,
    tokenA: `A${i}`,
    tokenB: `B${i}`,
    market: `market_${i}`,
    question: `Will token${i} price exceed ${1000 + i * 10} USD by month end?`,
    feedName: `token${i}`,
    value: 100 + i,
    tradingAmountA: Math.floor(Math.random() * 10000),
    tradingAmountB: Math.floor(Math.random() * 10000),
    tokenAPrice: parseFloat((Math.random() * 2000).toFixed(2)),
    tokenBPrice: parseFloat((Math.random() * 2000).toFixed(2)),
    initAmount: Math.floor(Math.random() * 100000),
    range: 0,
    date: new Date(Date.now() + (i + 1) * 86400000).toISOString(),
    marketStatus: "ACTIVE",
    imageUrl: `https://picsum.photos/seed/crypto${i}/300/200`,
    createdAt: new Date().toISOString(),
    __v: 0,
    playerACount: Math.floor(Math.random() * 1000),
    playerBCount: Math.floor(Math.random() * 1000),
    totalInvestment: Math.floor(Math.random() * 1000000),
    description: `Sample crypto market ${i}`,
    comments: Math.floor(Math.random() * 200),
  })),
  ...Array.from({ length: 5 }).map((_, i) => ({
    _id: `sample_sports_${i}`,
    marketField: 1,
    apiType: 1,
    task: "match",
    creator: `sports_creator_${i}`,
    tokenA: `TeamA${i}`,
    tokenB: `TeamB${i}`,
    market: `sports_market_${i}`,
    question: `Will TeamA${i} beat TeamB${i} in upcoming match?`,
    feedName: `team${i}`,
    value: 0,
    tradingAmountA: Math.floor(Math.random() * 5000),
    tradingAmountB: Math.floor(Math.random() * 5000),
    tokenAPrice: parseFloat((Math.random() * 100).toFixed(2)),
    tokenBPrice: parseFloat((Math.random() * 100).toFixed(2)),
    initAmount: Math.floor(Math.random() * 50000),
    range: 0,
    date: new Date(Date.now() + (i + 2) * 86400000).toISOString(),
    marketStatus: "ACTIVE",
    imageUrl: `https://picsum.photos/seed/sports${i}/300/200`,
    createdAt: new Date().toISOString(),
    __v: 0,
    playerACount: Math.floor(Math.random() * 500),
    playerBCount: Math.floor(Math.random() * 500),
    totalInvestment: Math.floor(Math.random() * 500000),
    description: `Sample sports market ${i}`,
    comments: Math.floor(Math.random() * 100),
  })),
  ...Array.from({ length: 3 }).map((_, i) => ({
    _id: `sample_news_${i}`,
    marketField: 0,
    apiType: 0,
    task: "news",
    creator: `news_creator_${i}`,
    tokenA: `NewsA${i}`,
    tokenB: `NewsB${i}`,
    market: `news_market_${i}`,
    question: `Will headline ${i} make front page for major outlets?`,
    feedName: `news${i}`,
    value: 0,
    tradingAmountA: Math.floor(Math.random() * 2000),
    tradingAmountB: Math.floor(Math.random() * 2000),
    tokenAPrice: parseFloat((Math.random() * 50).toFixed(2)),
    tokenBPrice: parseFloat((Math.random() * 50).toFixed(2)),
    initAmount: Math.floor(Math.random() * 20000),
    range: 0,
    date: new Date(Date.now() + (i + 3) * 86400000).toISOString(),
    marketStatus: "ACTIVE",
    imageUrl: `https://picsum.photos/seed/news${i}/300/200`,
    createdAt: new Date().toISOString(),
    __v: 0,
    playerACount: Math.floor(Math.random() * 200),
    playerBCount: Math.floor(Math.random() * 200),
    totalInvestment: Math.floor(Math.random() * 200000),
    description: `Sample news market ${i}`,
    comments: Math.floor(Math.random() * 50),
  })),
  // 2 pending markets as examples
  {
    _id: `sample_pending_1`,
    marketField: 0,
    apiType: 0,
    task: "price",
    creator: `creator_pending_1`,
    tokenA: `AP`,
    tokenB: `BP`,
    market: `market_pending_1`,
    question: `Will pending token reach 500 USD?`,
    feedName: `pending_token`,
    value: 0,
    tradingAmountA: 0,
    tradingAmountB: 0,
    tokenAPrice: 0,
    tokenBPrice: 0,
    initAmount: 0,
    range: 0,
    date: new Date(Date.now() + 7 * 86400000).toISOString(),
    marketStatus: "PENDING",
    imageUrl: `https://picsum.photos/seed/pending1/300/200`,
    createdAt: new Date().toISOString(),
    __v: 0,
    playerACount: 0,
    playerBCount: 0,
    totalInvestment: 0,
    description: `Sample pending market 1`,
    comments: 0,
  },
  {
    _id: `sample_pending_2`,
    marketField: 1,
    apiType: 1,
    task: "match",
    creator: `creator_pending_2`,
    tokenA: `AP2`,
    tokenB: `BP2`,
    market: `market_pending_2`,
    question: `Will pending team win next game?`,
    feedName: `pending_team`,
    value: 0,
    tradingAmountA: 0,
    tradingAmountB: 0,
    tokenAPrice: 0,
    tokenBPrice: 0,
    initAmount: 0,
    range: 0,
    date: new Date(Date.now() + 10 * 86400000).toISOString(),
    marketStatus: "PENDING",
    imageUrl: `https://picsum.photos/seed/pending2/300/200`,
    createdAt: new Date().toISOString(),
    __v: 0,
    playerACount: 0,
    playerBCount: 0,
    totalInvestment: 0,
    description: `Sample pending market 2`,
    comments: 0,
  }
];

export default SAMPLE_MARKETS;
